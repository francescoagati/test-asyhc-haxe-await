// Generated by Haxe 4.0.5
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
class MyClass {
	static async ccc() {
		return "hi";
	}
	static async example() {
		var result = (await MyClass.ccc()) + (await MyClass.ccc()) + (await MyClass.ccc());
		(await new Promise(function(resolve,reject) {
			return haxe_Timer.delay(function() {
				resolve(null);
				return;
			},3000);
		}));
		return result;
	}
}
MyClass.__name__ = true;
class Main {
	static main() {
		console.log("src/Main.hx:26:","Hello, world!");
		tink_core__$Future_Future_$Impl_$.ofJsPromise(MyClass.example()).map(function(s) {
			console.log("src/Main.hx:28:",tink_core_OutcomeTools.sure(s));
			return;
		}).gather();
	}
}
Main.__name__ = true;
Math.__name__ = true;
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"]
	,CFunction: {_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["v"],$_)
};
class haxe_Timer {
	constructor(time_ms) {
		var me = this;
		this.id = setInterval(function() {
			me.run();
		},time_ms);
	}
	stop() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	run() {
	}
	static delay(f,time_ms) {
		var t = new haxe_Timer(time_ms);
		t.run = function() {
			t.stop();
			f();
		};
		return t;
	}
}
haxe_Timer.__name__ = true;
class js__$Boot_HaxeError extends Error {
	constructor(val) {
		super();
		this.val = val;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,js__$Boot_HaxeError);
		}
	}
	static wrap(val) {
		if(((val) instanceof Error)) {
			return val;
		} else {
			return new js__$Boot_HaxeError(val);
		}
	}
}
js__$Boot_HaxeError.__name__ = true;
class js_Boot {
	static __string_rec(o,s) {
		if(o == null) {
			return "null";
		}
		if(s.length >= 5) {
			return "<...>";
		}
		var t = typeof(o);
		if(t == "function" && (o.__name__ || o.__ename__)) {
			t = "object";
		}
		switch(t) {
		case "function":
			return "<function>";
		case "object":
			if(o.__enum__) {
				var e = $hxEnums[o.__enum__];
				var n = e.__constructs__[o._hx_index];
				var con = e[n];
				if(con.__params__) {
					s = s + "\t";
					return n + "(" + ((function($this) {
						var $r;
						var _g = [];
						{
							var _g1 = 0;
							var _g2 = con.__params__;
							while(true) {
								if(!(_g1 < _g2.length)) {
									break;
								}
								var p = _g2[_g1];
								_g1 = _g1 + 1;
								_g.push(js_Boot.__string_rec(o[p],s));
							}
						}
						$r = _g;
						return $r;
					}(this))).join(",") + ")";
				} else {
					return n;
				}
			}
			if(((o) instanceof Array)) {
				var str = "[";
				s += "\t";
				var _g3 = 0;
				var _g11 = o.length;
				while(_g3 < _g11) {
					var i = _g3++;
					str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
				}
				str += "]";
				return str;
			}
			var tostr;
			try {
				tostr = o.toString;
			} catch( e1 ) {
				var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
				return "???";
			}
			if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
				var s2 = o.toString();
				if(s2 != "[object Object]") {
					return s2;
				}
			}
			var str1 = "{\n";
			s += "\t";
			var hasp = o.hasOwnProperty != null;
			var k = null;
			for( k in o ) {
			if(hasp && !o.hasOwnProperty(k)) {
				continue;
			}
			if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
				continue;
			}
			if(str1.length != 2) {
				str1 += ", \n";
			}
			str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
			}
			s = s.substring(1);
			str1 += "\n" + s + "}";
			return str1;
		case "string":
			return o;
		default:
			return String(o);
		}
	}
}
js_Boot.__name__ = true;
class tink_core__$Callback_Callback_$Impl_$ {
	static invoke(this1,data) {
		if(tink_core__$Callback_Callback_$Impl_$.depth < 500) {
			tink_core__$Callback_Callback_$Impl_$.depth++;
			this1(data);
			tink_core__$Callback_Callback_$Impl_$.depth--;
		} else {
			var _e = this1;
			var f = function(data1) {
				tink_core__$Callback_Callback_$Impl_$.invoke(_e,data1);
			};
			var data2 = data;
			tink_core__$Callback_Callback_$Impl_$.defer(function() {
				f(data2);
			});
		}
	}
	static defer(f) {
		haxe_Timer.delay(f,0);
	}
}
tink_core__$Callback_Callback_$Impl_$.__name__ = true;
class tink_core__$Callback_ListCell {
	constructor(cb,list) {
		if(cb == null) {
			throw new js__$Boot_HaxeError("callback expected but null received");
		}
		this.cb = cb;
		this.list = list;
	}
	cancel() {
		if(this.list != null) {
			var list = this.list;
			this.cb = null;
			this.list = null;
			if(--list.used < list.used >> 1) {
				list.compact();
			}
		}
	}
}
tink_core__$Callback_ListCell.__name__ = true;
class tink_core_CallbackList {
	constructor() {
		this.busy = false;
		this.queue = [];
		this.used = 0;
		this.cells = [];
	}
	ondrain() {
	}
	invoke(data,destructive) {
		if(this.busy) {
			var f = $bind(this,this.invoke);
			var data1 = data;
			var destructive1 = destructive;
			var tmp = function() {
				f(data1,destructive1);
				return;
			};
			this.queue.push(tmp);
		} else {
			this.busy = true;
			var length = this.cells.length;
			var _g = 0;
			while(_g < length) {
				var _this = this.cells[_g++];
				if(_this.list != null) {
					tink_core__$Callback_Callback_$Impl_$.invoke(_this.cb,data);
				}
			}
			this.busy = false;
			if(destructive) {
				var added = this.cells.length - length;
				var _g2 = 0;
				while(_g2 < length) {
					var _this1 = this.cells[_g2++];
					_this1.cb = null;
					_this1.list = null;
				}
				var _g4 = 0;
				while(_g4 < added) {
					var i = _g4++;
					this.cells[i] = this.cells[length + i];
				}
				this.resize(added);
			} else if(this.used < this.cells.length) {
				this.compact();
			}
			if(this.queue.length > 0) {
				(this.queue.shift())();
			}
		}
	}
	compact() {
		if(this.busy) {
			return;
		} else if(this.used == 0) {
			this.resize(0);
			this.ondrain();
		} else {
			var compacted = 0;
			var _g = 0;
			var _g1 = this.cells.length;
			while(_g < _g1) {
				var i = _g++;
				var _g2 = this.cells[i];
				if(_g2.cb != null) {
					if(compacted != i) {
						this.cells[compacted] = _g2;
					}
					if(++compacted == this.used) {
						break;
					}
				}
			}
			this.resize(this.used);
		}
	}
	resize(length) {
		this.cells.length = length;
	}
}
tink_core_CallbackList.__name__ = true;
class tink_core_TypedError {
	constructor(code,message,pos) {
		if(code == null) {
			code = 500;
		}
		this.isTinkError = true;
		this.code = code;
		this.message = message;
		this.pos = pos;
		this.exceptionStack = [];
		this.callStack = [];
	}
	printPos() {
		return this.pos.className + "." + this.pos.methodName + ":" + this.pos.lineNumber;
	}
	toString() {
		var ret = "Error#" + this.code + ": " + this.message;
		if(this.pos != null) {
			ret += " @ " + this.printPos();
		}
		return ret;
	}
	throwSelf() {
		throw js__$Boot_HaxeError.wrap(this);
	}
	static withData(code,message,data,pos) {
		return tink_core_TypedError.typed(code,message,data,pos);
	}
	static typed(code,message,data,pos) {
		var ret = new tink_core_TypedError(code,message,pos);
		ret.data = data;
		return ret;
	}
	static asError(v) {
		if(v != null && v.isTinkError) {
			return v;
		} else {
			return null;
		}
	}
}
tink_core_TypedError.__name__ = true;
class tink_core__$Lazy_LazyConst {
	constructor(value) {
		this.value = value;
	}
	map(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			return f(_gthis.value);
		});
	}
}
tink_core__$Lazy_LazyConst.__name__ = true;
class tink_core__$Future_SyncFuture {
	constructor(value) {
		this.value = value;
	}
	map(f) {
		return new tink_core__$Future_SyncFuture(this.value.map(f));
	}
	gather() {
		return this;
	}
}
tink_core__$Future_SyncFuture.__name__ = true;
class tink_core__$Future_Future_$Impl_$ {
	static ofJsPromise(promise) {
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			promise.then(function(a) {
				cb(tink_core_Outcome.Success(a));
			}).catch(function(e) {
				var tmp = tink_core_Outcome.Failure(tink_core_TypedError.withData(null,e.message,e,{ fileName : "tink/core/Future.hx", lineNumber : 89, className : "tink.core._Future.Future_Impl_", methodName : "ofJsPromise"}));
				cb(tmp);
			});
		});
	}
	static async(f,lazy) {
		if(lazy == null) {
			lazy = false;
		}
		if(lazy) {
			return new tink_core__$Future_SuspendableFuture(function($yield) {
				f($yield);
				return null;
			});
		} else {
			var op = new tink_core_FutureTrigger();
			tink_core__$Callback_Callback_$Impl_$.invoke(f,$bind(op,op.trigger));
			return op;
		}
	}
}
tink_core__$Future_Future_$Impl_$.__name__ = true;
class tink_core_FutureTrigger {
	constructor() {
		this.list = new tink_core_CallbackList();
	}
	map(f) {
		if(this.list == null) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(this.result)));
		} else {
			var ret = new tink_core_FutureTrigger();
			var _this = this.list;
			var node = new tink_core__$Callback_ListCell(function(v) {
				var node1 = f(v);
				ret.trigger(node1);
			},_this);
			_this.cells.push(node);
			_this.used++;
			return ret;
		}
	}
	gather() {
		return this;
	}
	trigger(result) {
		if(this.list == null) {
			return false;
		} else {
			var list = this.list;
			this.list = null;
			this.result = result;
			list.invoke(result,true);
			return true;
		}
	}
}
tink_core_FutureTrigger.__name__ = true;
class tink_core__$Future_SuspendableFuture {
	constructor(wakeup) {
		this.suspended = true;
		var _gthis = this;
		this.wakeup = wakeup;
		this.callbacks = new tink_core_CallbackList();
		this.callbacks.ondrain = function() {
			if(_gthis.callbacks != null) {
				_gthis.suspended = true;
				var this1 = _gthis.link;
				if(this1 != null) {
					this1.cancel();
				}
				_gthis.link = null;
			}
		};
	}
	trigger(value) {
		var _g = this.callbacks;
		if(_g != null) {
			this.callbacks = null;
			this.suspended = false;
			this.result = value;
			this.link = null;
			this.wakeup = null;
			_g.invoke(value,true);
		}
	}
	handle(callback) {
		if(this.callbacks == null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(callback,this.result);
			return null;
		} else {
			var _this = this.callbacks;
			var node = new tink_core__$Callback_ListCell(callback,_this);
			_this.cells.push(node);
			_this.used++;
			if(this.suspended) {
				this.suspended = false;
				this.link = this.wakeup($bind(this,this.trigger));
			}
			return node;
		}
	}
	map(f) {
		var _gthis = this;
		return new tink_core__$Future_SuspendableFuture(function($yield) {
			return _gthis.handle(function(res) {
				var tmp = f(res);
				$yield(tmp);
			});
		});
	}
	gather() {
		return this;
	}
}
tink_core__$Future_SuspendableFuture.__name__ = true;
class tink_core__$Lazy_LazyFunc {
	constructor(f) {
		this.f = f;
	}
	get() {
		if(this.f != null) {
			this.result = this.f();
			this.f = null;
		}
		return this.result;
	}
	map(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var tmp = _gthis.get();
			return f(tmp);
		});
	}
}
tink_core__$Lazy_LazyFunc.__name__ = true;
var tink_core_Outcome = $hxEnums["tink.core.Outcome"] = { __ename__ : true, __constructs__ : ["Success","Failure"]
	,Success: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"tink.core.Outcome",toString:$estr}; },$_.__params__ = ["data"],$_)
	,Failure: ($_=function(failure) { return {_hx_index:1,failure:failure,__enum__:"tink.core.Outcome",toString:$estr}; },$_.__params__ = ["failure"],$_)
};
class tink_core_OutcomeTools {
	static sure(outcome) {
		switch(outcome._hx_index) {
		case 0:
			return outcome.data;
		case 1:
			var _g = outcome.failure;
			var _g1 = tink_core_TypedError.asError(_g);
			if(_g1 == null) {
				throw new js__$Boot_HaxeError(_g);
			} else {
				return _g1.throwSelf();
			}
			break;
		}
	}
}
tink_core_OutcomeTools.__name__ = true;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
String.__name__ = true;
Array.__name__ = true;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
tink_core__$Callback_Callback_$Impl_$.depth = 0;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
